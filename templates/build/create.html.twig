{% extends 'base.html.twig' %}

{% block title %}Smite Create Build - Unofficial SMITE{% endblock %}

{% block header_meta %}
    <link rel="canonical" href="https://smitestats.com/builds/create" />
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">
        (function () {
            'use strict';

            angular.module("buildsApp", [])
                .config(['$interpolateProvider', function ($interpolateProvider) {
                    $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
                }])

                .controller("BuildController",
                    ['$scope', '$http', function ($scope, $http) {

                        $scope.buildItems = [];
                        $scope.buildPrice = 0;

                        $scope.buildPowers = {
                            attackSpeed: 0,
                            health: 0,
                            healthPerFive: 0,
                            magicalPower: 0,
                            magicalProtection: 0,
                            mana: 0,
                            manaPerFive: 0,
                            physicalPower: 0,
                            physicalProtection: 0,
                            movementSpeed: 0
                        };

                        $scope.gods = false;
                        $scope.matchItems = [];

                        $scope.godLevel = 1;
                        $scope.selectedGod = null;

                        $scope.savedItems = [];

                        function getGods()
                        {
                            return $http.get('/api/gods')
                                .catch(function (response) {
                                    throw new Error(response.data);
                                }).then(function (response) {
                                    $scope.gods = response.data;
                                });
                        }
                        getGods();

                        function getItems()
                        {
                            return $http.get('/api/match-items')
                                .catch(function (response) {
                                    throw new Error(response.data);
                                }).then(function (response) {
                                    $scope.matchItems = response.data;
                                    populateSavedItems();
                                });
                        }
                        getItems();

                        function populateSavedItems()
                        {
                            $scope.matchItems.forEach(function (matchItem) {
                                if ($scope.savedItems.includes(matchItem.id)) {
                                    $scope.buildItems.push(matchItem);
                                    $scope.buildPrice = ($scope.buildPrice + matchItem.price);
                                    matchItem.items.forEach(function (buildItemEffect) {
                                        if (buildItemEffect.description === 'Attack Speed') {
                                            $scope.buildPowers.attackSpeed = ($scope.buildPowers.attackSpeed + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'Magical Power') {
                                            $scope.buildPowers.magicalPower = ($scope.buildPowers.magicalPower + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'Movement Speed') {
                                            $scope.buildPowers.movementSpeed = ($scope.buildPowers.movementSpeed + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'Physical Power') {
                                            $scope.buildPowers.physicalPower = ($scope.buildPowers.physicalPower + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'Physical Protection') {
                                            $scope.buildPowers.physicalProtection = ($scope.buildPowers.physicalProtection + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'Magical Protection') {
                                            $scope.buildPowers.magicalProtection = ($scope.buildPowers.magicalProtection + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'Health') {
                                            $scope.buildPowers.health = ($scope.buildPowers.health + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'Mana') {
                                            $scope.buildPowers.mana = ($scope.buildPowers.mana + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'HP5') {
                                            $scope.buildPowers.healthPerFive = ($scope.buildPowers.healthPerFive + buildItemEffect.value);
                                        }
                                        if (buildItemEffect.description === 'MP5') {
                                            $scope.buildPowers.manaPerFive = ($scope.buildPowers.manaPerFive + buildItemEffect.value);
                                        }
                                    });
                                }
                            });
                        }

                        $scope.addBuildItem = function (item) {

                            if ($scope.buildItems.length < 6) {

                                console.log(item);

                                let flag = false;
                                $scope.buildItems.forEach(function (buildItem) {
                                    if (buildItem.id === item.id) {
                                        flag = true;
                                    }
                                });

                                if (flag) {
                                    return;
                                }

                                item.items.forEach(function (buildItemEffect) {
                                    if (buildItemEffect.description === 'Attack Speed') {
                                        $scope.buildPowers.attackSpeed = ($scope.buildPowers.attackSpeed + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Magical Power') {
                                        $scope.buildPowers.magicalPower = ($scope.buildPowers.magicalPower + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Movement Speed') {
                                        $scope.buildPowers.movementSpeed = ($scope.buildPowers.movementSpeed + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Physical Power') {
                                        $scope.buildPowers.physicalPower = ($scope.buildPowers.physicalPower + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Physical Protection') {
                                        $scope.buildPowers.physicalProtection = ($scope.buildPowers.physicalProtection + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Magical Protection') {
                                        $scope.buildPowers.magicalProtection = ($scope.buildPowers.magicalProtection + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Health') {
                                        $scope.buildPowers.health = ($scope.buildPowers.health + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Mana') {
                                        $scope.buildPowers.mana = ($scope.buildPowers.mana + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'HP5') {
                                        $scope.buildPowers.healthPerFive = ($scope.buildPowers.healthPerFive + buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'MP5') {
                                        $scope.buildPowers.manaPerFive = ($scope.buildPowers.manaPerFive + buildItemEffect.value);
                                    }
                                });

                                $scope.buildPrice = ($scope.buildPrice + item.price);
                                $scope.buildItems.push(item);
                            }
                        };

                        $scope.removeBuildItem = function (item) {
                            if ($scope.buildItems.length > 0) {
                                $scope.buildPrice = ($scope.buildPrice - item.price);

                                item.items.forEach(function (buildItemEffect) {
                                    if (buildItemEffect.description === 'Attack Speed') {
                                        $scope.buildPowers.attackSpeed = ($scope.buildPowers.attackSpeed - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Magical Power') {
                                        $scope.buildPowers.magicalPower = ($scope.buildPowers.magicalPower - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Movement Speed') {
                                        $scope.buildPowers.movementSpeed = ($scope.buildPowers.movementSpeed - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Physical Power') {
                                        $scope.buildPowers.physicalPower = ($scope.buildPowers.physicalPower - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Physical Protection') {
                                        $scope.buildPowers.physicalProtection = ($scope.buildPowers.physicalProtection - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Magical Protection') {
                                        $scope.buildPowers.magicalProtection = ($scope.buildPowers.magicalProtection - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Health') {
                                        $scope.buildPowers.health = ($scope.buildPowers.health - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'Mana') {
                                        $scope.buildPowers.mana = ($scope.buildPowers.mana - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'HP5') {
                                        $scope.buildPowers.healthPerFive = ($scope.buildPowers.healthPerFive - buildItemEffect.value);
                                    }
                                    if (buildItemEffect.description === 'MP5') {
                                        $scope.buildPowers.manaPerFive = ($scope.buildPowers.manaPerFive - buildItemEffect.value);
                                    }
                                });

                                var index = $scope.buildItems.indexOf(item);
                                $scope.buildItems.splice(index, 1);
                            }
                        };

                        $scope.resetBuild = function () {
                            $scope.buildItems = [];
                            $scope.buildPrice = 0;
                            $scope.buildPowers = {
                                attackSpeed: 0,
                                health: 0,
                                healthPerFive: 0,
                                magicalPower: 0,
                                magicalProtection: 0,
                                mana: 0,
                                manaPerFive: 0,
                                movementSpeed: 0,
                                physicalPower: 0,
                                physicalProtection: 0
                            };
                            $scope.godLevel = 1;
                        };

                }])
                .filter('round', function() {
                    return function (input) {
                        return input.replace(/\.00$/,'');
                    };
                });
        })();
    </script>
{% endblock %}

{% block body %}
    <div class="bg-light pt-3 pb-5" ng-app = "buildsApp">
        <div class="container" ng-controller = "BuildController">

            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ path('homepage') }}">Home</a></li>
                    <li class="breadcrumb-item"><a href="{{ path('builds') }}">Builds</a></li>
                    <li class="breadcrumb-item active">Create Build</li>
                </ol>
            </nav>

            <h1>Create a Smite Build</h1>

            <div ng-if="!gods">
                <i class="fa fa-spinner fa-spin"></i>
            </div>

            <div ng-if="gods">

                <label for="godSelect">Choose a God:</label>
                <select id="godSelect"
                        ng-change="resetBuild()"
                        ng-options="god.name for god in gods track by god.id"
                        ng-model="selectedGod"></select>

                <hr />

                <div ng-if="selectedGod">

                    <h2>{[{ selectedGod.name }]} Build</h2>

                    <div class="row build-items mb-4">
                        <div class="col-4">
                            <h5>Base Stats</h5>

                            <table class="table table-sm table-striped bg-white">
                                <tbody>
                                    <tr>
                                        <th>Attack Speed</th>
                                        <td>{[{ selectedGod.attackSpeed + ((godLevel - 1) * selectedGod.attackSpeedPerLevel) | number: 2 | round }]} (+{[{ selectedGod.attackSpeedPerLevel }]})</td>
                                    </tr>
                                    <tr>
                                        <th>Cooldown</th>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <th>Health</th>
                                        <td>{[{ selectedGod.health + ((godLevel - 1) * selectedGod.healthPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.healthPerLevel }]})</td>
                                    </tr>
                                    <tr>
                                        <th>HP5</th>
                                        <td>{[{ selectedGod.healthPerFive + ((godLevel - 1) * selectedGod.healthPerFive) | number: 2 | round  }]} (+{[{ selectedGod.healthPerFive }]})</td>
                                    </tr>
                                    <tr>
                                        <th>Lifesteal</th>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <th>Magical Power</th>
                                        <td>{[{ selectedGod.magicalPower + ((godLevel - 1) * selectedGod.magicalPowerPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.magicalPowerPerLevel }]})</td>
                                    </tr>
                                    <tr>
                                        <th>Magical Protection</th>
                                        <td>{[{ selectedGod.magicProtection + ((godLevel - 1) * selectedGod.magicProtectionPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.magicProtectionPerLevel }]})</td>
                                    </tr>
                                    <tr>
                                        <th>Mana</th>
                                        <td>{[{ selectedGod.mana + ((godLevel - 1) * selectedGod.manaPerLevel) }]} (+{[{ selectedGod.manaPerLevel | number: 2 | round  }]})</td>
                                    </tr>
                                    <tr>
                                        <th>MP5</th>
                                        <td>{[{ selectedGod.manaPerFive + ((godLevel - 1) * selectedGod.manaPerFive) }]} (+{[{ selectedGod.manaPerFive | number: 2 | round  }]})</td>
                                    </tr>
                                    <tr>
                                        <th>Movement Speed</th>
                                        <td>{[{ selectedGod.speed | number: 2 | round  }]}</td>
                                    </tr>
                                    <tr>
                                        <th>Penetration</th>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <th>Physical Power</th>
                                        <td>{[{ selectedGod.physicalPower + ((godLevel - 1) * selectedGod.physicalPowerPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.physicalPowerPerLevel }]})</td>
                                    </tr>
                                    <tr>
                                        <th>Physical Protection</th>
                                        <td>{[{ selectedGod.physicalProtection + ((godLevel - 1) * selectedGod.physicalProtectionPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.physicalProtectionPerLevel }]})</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-4">
                            <h5>Build Additions</h5>
                            <table class="table table-sm table-striped bg-white">
                                <tbody>
                                <tr>
                                    <th>Attack Speed</th>
                                    <td>{[{ buildPowers.attackSpeed }]}</td>
                                </tr>
                                <tr>
                                    <th>Cooldown</th>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Health</th>
                                    <td>{[{ buildPowers.health }]}</td>
                                </tr>
                                <tr>
                                    <th>HP5</th>
                                    <td>{[{ buildPowers.healthPerFive }]}</td>
                                </tr>
                                <tr>
                                    <th>Lifesteal</th>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Magical Power</th>
                                    <td>{[{ buildPowers.magicalPower }]}</td>
                                </tr>
                                <tr>
                                    <th>Magical Protection</th>
                                    <td>{[{ buildPowers.magicalProtection }]}</td>
                                </tr>
                                <tr>
                                    <th>Mana</th>
                                    <td>{[{ buildPowers.mana }]}</td>
                                </tr>
                                <tr>
                                    <th>MP5</th>
                                    <td>{[{ buildPowers.manaPerFive }]}</td>
                                </tr>
                                <tr>
                                    <th>Movement Speed</th>
                                    <td>{[{ buildPowers.movementSpeed }]}</td>
                                </tr>
                                <tr>
                                    <th>Penetration</th>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Physical Power</th>
                                    <td>{[{ buildPowers.physicalPower }]}</td>
                                </tr>
                                <tr>
                                    <th>Physical Protection</th>
                                    <td>{[{ buildPowers.physicalProtection }]}</td>
                                </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-4">
                            <h5>Build God Stats</h5>
                            <table class="table table-sm table-striped bg-white">
                                <tbody>
                                <tr>
                                    <th>Attack Speed</th>
                                    <td>{[{ (selectedGod.attackSpeed + buildPowers.attackSpeed) + ((godLevel - 1) * selectedGod.attackSpeedPerLevel) | number: 2 | round }]} (+{[{ selectedGod.attackSpeedPerLevel }]})</td>
                                </tr>
                                <tr>
                                    <th>Cooldown</th>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Health</th>
                                    <td>{[{ (selectedGod.health + buildPowers.health) + ((godLevel - 1) * selectedGod.healthPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.healthPerLevel }]})</td>
                                </tr>
                                <tr>
                                    <th>HP5</th>
                                    <td>{[{ (selectedGod.healthPerFive + buildPowers.healthPerFive) + ((godLevel - 1) * selectedGod.healthPerFive) | number: 2 | round  }]} (+{[{ selectedGod.healthPerFive }]})</td>
                                </tr>
                                <tr>
                                    <th>Lifesteal</th>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Magical Power</th>
                                    <td>{[{ (selectedGod.magicalPower + buildPowers.magicalPower) + ((godLevel - 1) * selectedGod.magicalPowerPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.magicalPowerPerLevel }]})</td>
                                </tr>
                                <tr>
                                    <th>Magical Protection</th>
                                    <td>{[{ (selectedGod.magicProtection + buildPowers.magicalProtection) + ((godLevel - 1) * selectedGod.magicProtectionPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.magicProtectionPerLevel }]})</td>
                                </tr>
                                <tr>
                                    <th>Mana</th>
                                    <td>{[{ (selectedGod.mana + buildPowers.mana) + ((godLevel - 1) * selectedGod.manaPerLevel) }]} (+{[{ selectedGod.manaPerLevel | number: 2 | round  }]})</td>
                                </tr>
                                <tr>
                                    <th>MP5</th>
                                    <td>{[{ (selectedGod.manaPerFive + buildPowers.manaPerFive)  + ((godLevel - 1) * selectedGod.manaPerFive) }]} (+{[{ selectedGod.manaPerFive | number: 2 | round  }]})</td>
                                </tr>
                                <tr>
                                    <th>Movement Speed</th>
                                    <td>{[{ (selectedGod.speed + buildPowers.movementSpeed) | number: 2 | round  }]}</td>
                                </tr>
                                <tr>
                                    <th>Penetration</th>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Physical Power</th>
                                    <td>{[{ (selectedGod.physicalPower + buildPowers.physicalPower) + ((godLevel - 1) * selectedGod.physicalPowerPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.physicalPowerPerLevel }]})</td>
                                </tr>
                                <tr>
                                    <th>Physical Protection</th>
                                    <td>{[{ (selectedGod.physicalProtection + buildPowers.physicalProtection) + ((godLevel - 1) * selectedGod.physicalProtectionPerLevel) | number: 2 | round  }]} (+{[{ selectedGod.physicalProtectionPerLevel }]})</td>
                                </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <span>Build Cost: <strong>{[{ buildPrice }]}</strong></span>
                        </div>
                        <div class="col-md-4">
                            <label><strong>God Level</strong>:</label>
                            <input type="range" name="range" ng-model="godLevel" min="1"  max="20" /> <strong>{[{ godLevel }]}</strong><br />
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-danger" ng-click="resetBuild()" ng-if="buildItems.length > 0">Reset Build Items</button>
                        </div>
                    </div>

                    <hr />

                    <div class="row mb-5">
                        {% for i in 0..5 %}
                        <div class="col-2" style="position: relative;">
                            <button class="btn btn-sm float-right" style="position: absolute; color:#ff0000; font-size:20px; top: 0px; right:15px; z-index:2;" type="button" ng-if="buildItems[{{ i }}]" ng-click="removeBuildItem(buildItems[ {{ i }} ])">
                                <i class="fa fa-times"></i>
                            </button>
                            <div class="bg-white border text-center pt-3 pb-2">
                                <div class="item" ng-if="buildItems[ {{ i }} ]">
                                    <img class="rounded" src="{[{ buildItems[ {{ i }} ].icon_url }]}" style="max-width:100%;" /><br />
                                    <span>{[{ buildItems[ {{ i }} ].name }]}</span>
                                </div>
                                <p ng-if="!buildItems[ {{ i }} ]">Select an item.</p>
                            </div>
                        </div>
                        {% endfor %}
                    </div>

                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#tierAll">All</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#starting">Starting Items</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tierOne">Tier 1</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tierTwo">Tier 2</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tierThree">Tier 3</a>
                        </li>
                    </ul>

                    <div class="tab-content bg-white p-4 border border-top-0 rounded-bottom">
                        <div id="tierAll" class="tab-pane fade show active">

                            <div class="row">
                                <div class="col-md-2 mb-3 text-center" ng-repeat="matchItem in matchItems">

                                    <img class="mb-1 rounded" style="width:128px; max-width:100%" ng-click="addBuildItem(matchItem)" src="{[{ matchItem.icon_url }]}" /><br />
                                    <span>{[{ matchItem.name }]}</span>

                                </div>
                            </div>

                        </div>
                        <div id="starting" class="tab-pane fade">

                            <div class="row">
                                <div class="col-md-2 mb-3 text-center" ng-if="matchItem.starting_item == '1'" ng-repeat="matchItem in matchItems">

                                    <img class="mb-1 rounded" style="width:128px; max-width:100%" ng-click="addBuildItem(matchItem)" src="{[{ matchItem.icon_url }]}" /><br />
                                    <span>{[{ matchItem.name }]}</span>

                                </div>
                            </div>

                        </div>
                        <div id="tierOne" class="tab-pane fade">

                            <div class="row">
                                <div class="col-md-2 mb-3 text-center" ng-if="matchItem.tier == '1' && matchItem.starting_item == '0'" ng-repeat="matchItem in matchItems">

                                    <img class="mb-1 rounded" style="width:128px; max-width:100%" ng-click="addBuildItem(matchItem)" src="{[{ matchItem.icon_url }]}" /><br />
                                    <span>{[{ matchItem.name }]}</span>

                                </div>
                            </div>

                        </div>
                        <div id="tierTwo" class="tab-pane fade">

                            <div class="row">
                                <div class="col-md-2 mb-3 text-center" ng-if="matchItem.tier == '2'" ng-repeat="matchItem in matchItems">

                                    <img class="mb-1 rounded" style="width:128px; max-width:100%" ng-click="addBuildItem(matchItem)" src="{[{ matchItem.icon_url }]}" /><br />
                                    <span>{[{ matchItem.name }]}</span>

                                </div>
                            </div>

                        </div>
                        <div id="tierThree" class="tab-pane fade">

                            <div class="row">
                                <div class="col-md-2 mb-3 text-center" ng-if="matchItem.tier == '3'" ng-repeat="matchItem in matchItems">

                                    <img class="mb-1 rounded" style="width:128px; max-width:100%" ng-click="addBuildItem(matchItem)" src="{[{ matchItem.icon_url }]}" /><br />
                                    <span>{[{ matchItem.name }]}</span>

                                </div>
                            </div>

                        </div>

                    </div>


                </div>
            </div>

        </div>
    </div>

{% endblock %}
